---
import { createPngDataUri } from "unlazy/blurhash";
import BaseLayout from "../layouts/BaseLayout.astro";
import Filter from "../components/Filter.astro";
import Tag from "../components/Tag.astro";
import type PublicationsPage from "../interfaces/publications-page";
import { SEO } from "astro-seo";

import fetchApi from "../lib/strapi";
import type Publication from "../interfaces/publication";

const publications = await fetchApi<Publication[]>({
  endpoint: "publications", // the content type to fetch
  wrappedByKey: "data", // the key to unwrap the response
  query: {
    // @ts-ignore
    populate: ["featuredImage", "tags"],
    // @ts-ignore
    pagination: {
      pageSize: 100,
    },
  }, // any query params to include
});

const publicationsPageData = await fetchApi<PublicationsPage>({
  endpoint: "publications-page",
  wrappedByKey: "data",
  query: {
    // @ts-ignore
    populate: [
      "featuredTags",
      "seo",
      "seo.title",
      "seo.description",
      "seo.canonical",
      "seo.ogTitle",
      "seo.ogDescription",
      "seo.ogImage",
      "seo.twitterTitle",
      "seo.twitterDescription",
      "seo.twitterImage",
    ],
  },
});

const publicationsWithBlurhash = publications.map((item) => {
  // Check if the featuredImage and its data exist
  if (item.attributes?.featuredImage?.data) {
    // Create the PNG data URI from the blurhash
    const blurhashDataUri = item.attributes.featuredImage.data.attributes
      .blurhash
      ? createPngDataUri(item.attributes.featuredImage.data.attributes.blurhash)
      : undefined;

    // Return a new object with the updated blurhash property
    return {
      ...item,
      attributes: {
        ...item.attributes,
        featuredImage: {
          ...item.attributes.featuredImage,
          data: {
            ...item.attributes.featuredImage.data,
            attributes: {
              ...item.attributes.featuredImage.data.attributes,
              blurhash: blurhashDataUri,
            },
          },
        },
      },
    };
  }
  // If the featuredImage or its data does not exist, return the item as is
  return item;
});
---

<BaseLayout>
  {
    publicationsPageData && publicationsPageData.attributes?.seo && (
      <SEO
        title={publicationsPageData?.attributes?.seo?.title}
        titleDefault="EM GUIDE"
        titleTemplate="%s â€“ Music Magazine Network"
        description={publicationsPageData?.attributes?.seo?.description}
        canonical={publicationsPageData?.attributes?.seo?.canonical ?? ""}
        openGraph={
          publicationsPageData?.attributes?.seo?.ogTitle &&
          publicationsPageData?.attributes?.seo?.ogImage?.data?.attributes?.url
            ? {
                basic: {
                  title:
                    publicationsPageData?.attributes?.seo?.ogTitle ??
                    publicationsPageData?.attributes?.seo?.title,
                  type: "website",
                  image: publicationsPageData?.attributes?.seo?.ogImage?.data
                    ?.attributes?.url
                    ? `${import.meta.env.PUBLIC_ASSET_URL}${publicationsPageData?.attributes?.seo?.ogImage?.data?.attributes?.url}`
                    : "/placeholder_og.png",
                  url: publicationsPageData?.attributes?.seo?.canonical ?? "",
                },
                optional: {
                  description:
                    publicationsPageData?.attributes?.seo?.ogDescription ??
                    publicationsPageData?.attributes?.seo?.description,
                },
                image: {
                  secureUrl: publicationsPageData?.attributes?.seo?.ogImage
                    ?.data?.attributes?.url
                    ? `${import.meta.env.PUBLIC_ASSET_URL}${publicationsPageData?.attributes?.seo?.ogImage?.data?.attributes?.url}`
                    : "/placeholder_og.png",
                },
              }
            : undefined
        }
        twitter={{
          card: "summary_large_image",
          title:
            publicationsPageData?.attributes?.seo?.twitterTitle ??
            publicationsPageData?.attributes?.seo?.title,
          description:
            publicationsPageData?.attributes?.seo?.twitterDescription ??
            publicationsPageData?.attributes?.seo?.description,
          image: publicationsPageData?.attributes?.seo?.twitterImage?.data
            ? `${import.meta.env.PUBLIC_ASSET_URL}${publicationsPageData?.attributes?.seo?.twitterImage?.data?.attributes?.url}`
            : "",
        }}
      />
    )
  }
  <section class="container px-4 mx-auto mb-20">
    <ul class="flex flex-wrap gap-3 mb-14">
      {
        publicationsPageData.attributes?.featuredTags?.data.length > 0 &&
          publicationsPageData.attributes?.featuredTags?.data.map((data) => (
            <li>
              <Filter
                label={data.attributes?.title}
                value={`/publications/tag/${data.attributes?.slug}`}
              />
            </li>
          ))
      }
    </ul>
    <ul class="space-y-14 lg:space-y-0 lg:grid lg:grid-cols-3 lg:gap-8">
      {
        publicationsWithBlurhash?.length > 0 &&
          publicationsWithBlurhash.map((publication: Publication) => (
            <li class="leading-none">
              <a
                href={`/publications/${publication.attributes?.slug}/`}
                class="group"
              >
                {publication.attributes?.featuredImage?.data && (
                  <div class="inline-block aspect-[9/7] mb-5 lg:mb-4 w-full">
                    <img
                      class="object-cover w-full h-full text-xl font-display group-hover:opacity-95 duration-100 ease-in-out transition-opacity"
                      width={
                        publication.attributes?.featuredImage.data?.attributes
                          .width
                      }
                      height={
                        publication.attributes?.featuredImage.data?.attributes
                          .height
                      }
                      alt={
                        publication.attributes?.featuredImage.data?.attributes
                          .caption ?? "image"
                      }
                      src={
                        publication.attributes?.featuredImage.data?.attributes
                          .blurhash
                      }
                      data-src={`${import.meta.env.PUBLIC_ASSET_URL}${
                        publication.attributes?.featuredImage.data?.attributes
                          ?.url
                      }`}
                      data-srcset={
                        `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.thumbnail.url} ${publication.attributes.featuredImage.data.attributes.formats.thumbnail.width}w, ` +
                        `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.small.url} ${publication.attributes.featuredImage.data.attributes.formats.small.width}w, ` +
                        `${publication.attributes?.featuredImage.data?.attributes.formats.medium?.url ? `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.medium.url} ${publication.attributes.featuredImage.data.attributes.formats.medium.width}w, ` : ""}` +
                        `${publication.attributes?.featuredImage.data?.attributes.formats.large?.url ? `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.large.url} ${publication.attributes.featuredImage.data.attributes.formats.large.width}w` : ""}`
                      }
                      data-sizes="auto"
                      loading="lazy"
                    />
                  </div>
                )}
                <div class="block">
                  <h2 class="text-xl font-display group-hover:text-accent duration-100 ease-in-out transition-colors">
                    {publication.attributes?.title}
                  </h2>
                </div>
              </a>
              {publication.attributes?.tags.data &&
                publication.attributes?.tags.data.length > 0 && (
                  <ul class="flex flex-wrap gap-4 mt-5 lg:mt-4">
                    {publication.attributes?.tags.data.map((tag) => (
                      <li>
                        <Tag
                          label={tag.attributes?.title}
                          url={`/publications/tag/${tag.attributes?.slug}`}
                        />
                      </li>
                    ))}
                  </ul>
                )}
            </li>
          ))
      }
    </ul>
  </section>
</BaseLayout>
