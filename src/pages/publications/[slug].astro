---
import { createPngDataUri } from "unlazy/blurhash";
import BaseLayout from "../../layouts/BaseLayout.astro";
import TextWithSideImage from "../../components/TextWithSideImage.astro";
import Tag from "../../components/Tag.astro";
import fetchApi from "../../lib/strapi";
import type Publication from "../../interfaces/publication";
import { SEO } from "astro-seo";

export async function getStaticPaths() {
  const publications = await fetchApi<Publication[]>({
    endpoint: "publications",
    wrappedByKey: "data",
    query: {
      // @ts-ignore
      populate: ["deep"],
      // populate: "*"
    },
  });

  return publications.map((publication: Publication) => ({
    params: { slug: publication.attributes?.slug },
    props: publication,
  }));
}
type Props = Publication;

const publication = Astro.props;
const blurhash = publication?.attributes?.featuredImage?.data?.attributes
  ?.blurhash
  ? createPngDataUri(
      publication?.attributes?.featuredImage?.data?.attributes?.blurhash
    )
  : null;
---

<BaseLayout>
  <SEO
    title={publication?.attributes?.title}
    titleDefault="EM GUIDE"
    titleTemplate="%s â€“ Music Magazine Network"
    description={publication?.attributes?.excerpt}
    canonical={`${Astro.site?.href}/news/${publication?.attributes?.slug}`}
    openGraph={{
      basic: {
        title: publication?.attributes?.title,
        type: "article",
        image: publication.attributes?.featuredImage?.data?.attributes?.url
          ? `${import.meta.env.PUBLIC_ASSET_URL}${publication?.attributes?.featuredImage?.data?.attributes?.url}`
          : "",
        url: `${Astro.site?.href}/news/${publication.attributes?.slug}`,
      },
      optional: {
        description: publication.attributes?.excerpt,
      },
    }}
    twitter={{
      card: "summary_large_image",
      title: publication?.attributes?.title,
      description: publication?.attributes?.excerpt,
      image: publication.attributes?.featuredImage?.data?.attributes?.url
        ? `${import.meta.env.PUBLIC_ASSET_URL}${publication?.attributes?.featuredImage?.data?.attributes?.url}`
        : "",
    }}
  />
  <section class="container px-4 mx-auto">
    <h1 class="mb-8 text-2xl font-bold font-display lg:text-4xl">
      {publication.attributes?.title}
    </h1>
    {
      publication.attributes?.tags?.data.length > 0 && (
        <div class="flex flex-wrap gap-x-5 gap-y-2.5 mb-8">
          {publication.attributes?.tags?.data.map((tag) => (
            <Tag
              label={tag.attributes?.title}
              url={`/publications/tag/${tag.attributes?.slug}`}
            />
          ))}
        </div>
      )
    }
    {
      publication.attributes?.featuredImage?.data?.attributes?.url && (
        <div class="relative aspect-[358/280] lg:aspect-[1120/713.37] mb-14">
          <img
            class="absolute top-0 left-0 inline-block object-cover w-full h-full"
            src={blurhash}
            alt={
              publication.attributes?.featuredImage?.data?.attributes
                ?.alternativeText
            }
            width={publication.attributes?.featuredImage.data?.attributes.width}
            height={
              publication.attributes?.featuredImage.data?.attributes.height
            }
            data-src={`${import.meta.env.PUBLIC_ASSET_URL}${
              publication.attributes?.featuredImage.data?.attributes?.url
            }`}
            data-srcset={
              `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.thumbnail.url} 234w, ` +
              `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.small.url} 500w, ` +
              `${publication.attributes?.featuredImage.data?.attributes.formats.medium?.url ? `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.medium.url} 750w, ` : ""}` +
              `${publication.attributes?.featuredImage.data?.attributes.formats.large?.url ? `${import.meta.env.PUBLIC_ASSET_URL}${publication.attributes.featuredImage.data.attributes.formats.large.url} 1000w` : ""}`
            }
            loading="lazy"
          />
          <svg
            class="absolute block object-cover w-full h-full text-accent lg:hidden"
            viewBox="0 0 358 280"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M358 239.543C358 274.769 313.048 299.45 277.61 258.94V178L176 280H358V239.543Z"
              fill="currentColor"
            />
            <path
              d="M20.9975 0H0V176L96 80.2498H40.3633C5.24268 80.2498 -19.3658 35.4028 20.9975 0Z"
              fill="currentColor"
            />
          </svg>

          <svg
            class="absolute hidden object-cover w-full h-full text-accent lg:block"
            viewBox="0 0 1120 714"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1120 609.335C1120 699.916 1003.67 763.385 911.958 659.214V451.077L649 713.369H1120V609.335Z"
              fill="currentColor"
            />
            <path
              d="M54.293 0H0V455.113L248.226 207.515H104.367C13.5559 207.515 -50.074 91.5468 54.293 0Z"
              fill="currentColor"
            />
          </svg>
        </div>
      )
    }
    {
      publication.attributes?.content.map((component) => {
        if (component.__component === "static.wysiwyg") {
          return (
            <section class="container px-4 mx-auto mb-20">
              <div
                class="[&>p]:text-xl [&>p]:mb-4 [&>h3]:mb-4 [&>h3]:font-display [&>h3]:font-bold [&>h3]:text-xl [&>blockquote]:px-2 [&>blockquote]:py-2.5 [&>blockquote]:bg-accent [&>blockquote]:font-display [&>blockquote]:text-2l [&>blockquote]:md:text-2xl [&>blockquote]:mb-4"
                set:html={component.content}
              />
            </section>
          );
        }
        if (component.__component === "static.images-with-decoration") {
          return (
            component.images.data?.length > 0 && (
              <section class="bg-saw-long-background bg-no-repeat bg-right-top pt-16">
                <div class="container px-4 mx-auto mb-20">
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    {component.images.data.map((image) => (
                      <div class="inline-block mb-8 aspect-[544/362]">
                        <img
                          src={
                            import.meta.env.STRAPI_URL + image.attributes?.url
                          }
                          alt={image.attributes?.alternativeText}
                          class="w-full h-full object-contain"
                          loading="lazy"
                        />
                      </div>
                    ))}
                  </div>
                </div>
              </section>
            )
          );
        }
        if (component.__component === "static.text-with-side-image") {
          return (
            <section class="container px-4 mx-auto mb-20">
              <TextWithSideImage
                text={component.text}
                image={component.image.data}
              />
            </section>
          );
        }
      })
    }
  </section>
</BaseLayout>
