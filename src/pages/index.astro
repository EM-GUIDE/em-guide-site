---
import BaseLayout from "../layouts/BaseLayout.astro";
import fetchApi from "../lib/strapi";

import type NetworkMember from "../interfaces/network-member";
const networkMembers = await fetchApi<NetworkMember[]>({
  endpoint: "network-members",
  wrappedByKey: "data",
  query: {
    // @ts-ignore
    populate: ["*"],
    // @ts-ignore
    pagination: {
      pageSize: 100,
    },
  },
});

const homePageData = await fetchApi({
  endpoint: "home-page",
  wrappedByKey: "data",
  query: {
    // @ts-ignore
    populate: ["slide", "slide.image"],
  },
});
---

<BaseLayout>
  <h3>Network</h3>

  {
    homePageData.attributes.slide &&
      homePageData.attributes.slide.length > 0 && (
        <section class="relative bg-no-repeat bg-cover pt-14 pb-28 mb-28 bg-carousel-background bg-[-100%]">
          <div
            id="image-carousel"
            class="container relative mx-auto splide"
            aria-label="Beautiful Images"
          >
            <div class="absolute bottom-0 z-10 flex justify-between w-full px-6 pt-2 translate-y-full lg:pt-0 lg:-translate-y-1/2 splide__arrows lg:top-1/2">
              <button class="w-16 splide__arrow splide__arrow--prev">
                <svg
                  class="h-fit"
                  width="98"
                  height="95"
                  viewBox="0 0 98 95"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M2.99999 47.4705L42.4006 7.10655C47.9646 1.40645 59.0012 4.71391 58.2227 17.0289L45.4288 30.1356L77.6739 30.1415L94.5894 47.4705L76.7695 65.7261L46.3389 65.7261L55.1601 74.763C60.7185 80.4689 57.4957 91.7694 45.4631 90.9719L2.99999 47.4705Z"
                    stroke="white"
                    stroke-width="4"
                    stroke-miterlimit="10"
                  />
                </svg>
              </button>
              <button class="w-16 splide__arrow splide__arrow--next">
                <svg
                  class="h-fit"
                  width="98"
                  height="92"
                  viewBox="0 0 98 92"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M94.5894 46.4706L55.1888 86.8345C49.6247 92.5346 38.5882 89.2272 39.3667 76.9121L52.1606 63.8054L19.9154 63.7996L2.99999 46.4706L20.8198 28.215L51.2504 28.215L42.4292 19.1781C36.8709 13.4721 40.0937 2.17163 52.1262 2.96917L94.5894 46.4706Z"
                    stroke="white"
                    stroke-width="4"
                    stroke-miterlimit="10"
                  />
                </svg>
              </button>
            </div>

            <ul class="z-10 absolute w-full bottom-8 splide__pagination [&>li]:flex [&>li>button]:border [&>li>button]:lg:border-2 [&>li>button]:border-white [&>li>button]:w-4 [&>li>button]:lg:w-6 [&>li>button]:h-1 [&>li]:h-1 [&>li>button]:lg:h-2 [&>li]:lg:h-2 [&>li>button.is-active]:bg-white [&>li:first-child>button]:rounded-l-2xl [&>li:last-child>button]:rounded-r-2xl" />

            <div class="splide__track">
              <ul class="bg-white splide__list">
                {homePageData.attributes.slide.map((slide) => {
                  return (
                    <li class="relative splide__slide">
                      <img
                        loading="lazy"
                        src={`${import.meta.env.PUBLIC_ASSET_URL}${
                          slide.image.data.attributes.url
                        }`}
                        alt=""
                        class="w-full h-auto object-cover aspect-[5/4] lg:aspect-[9/4]"
                      />
                      {slide.url ? (
                        <a
                          href={slide.url}
                          class="absolute inline-block px-10 bottom-14 lg:px-28 group"
                          aria-label="Link to slide"
                        >
                          <h4 class="text-2xl leading-normal text-white transition-colors group-hover:text-accent lg:text-4xl font-display">
                            {slide.text}
                          </h4>
                        </a>
                      ) : (
                        <div class="absolute inline-block px-10 bottom-14 lg:px-28">
                          <h4 class="text-2xl leading-normal text-white lg:text-4xl font-display">
                            {slide.text}
                          </h4>
                        </div>
                      )}
                    </li>
                  );
                })}
              </ul>
            </div>
          </div>
        </section>
      )
  }

  <section
    class="container px-4 mx-auto mb-20"
  >
    <h2 class="mb-6 text-2xl font-bold text-center md:mb-10 lg:mb-20 md:text-3xl lg:text-4xl font-display">Network</h2>
    <div class="grid flex-col items-center justify-center flex-grow grid-cols-2 gap-6 lg:gap-8 xl:gap-12 lg:flex lg:flex-row lg:flex-wrap sm:flex-row">
      {
        networkMembers.map((member) => {
          return (
            <div class="flex-col items-center justify-center lg:flex lg:w-[calc(25%_-_3rem)] grow-0 lg:self-end">
              <div class="flex justify-center lg:mb-5 sm:inline-block aspect-[8/3]">
                {member.attributes.logo.data && (
                  <img
                    loading="lazy"
                    src={`${import.meta.env.PUBLIC_ASSET_URL}${
                      member.attributes.logo.data.attributes.url
                    }`}
                    alt=""
                    class="w-auto h-auto"
                  />
                )}
              </div>
              <div>
                <h1 class="mt-auto text-xl font-normal text-center lg:text-2xl font-display">
                  {member.attributes.name}
                </h1>
              </div>
            </div>
          );
        })
      }
    </div>
  </section>
</BaseLayout>

<script>
  import Splide from "@splidejs/splide";
  import "@splidejs/splide/css/core";

  document.addEventListener("DOMContentLoaded", function () {
    new Splide("#image-carousel", {
      type: "fade",
      rewind: true,
    }).mount();
  });
</script>
