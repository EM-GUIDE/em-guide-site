---
import BaseLayout from "../layouts/BaseLayout.astro";
import ImagesWithDecoration from "../components/ImagesWithDecoration.astro";
import FeaturedContent from "../components/FeaturedContent.astro";
import Slider from "../components/Slider.astro";
import TextWithSideImage from "../components/TextWithSideImage.astro";
import type AboutPage from "../interfaces/about-page";
import fetchApi from "../lib/strapi";

const aboutPageData = await fetchApi<AboutPage>({
  endpoint: "about-us-page",
  wrappedByKey: "data",
  query: {
    // @ts-ignore
    populate: [
      "deep",
      "seo",
      "seo.title",
      "seo.description",
      "seo.canonical",
      "seo.ogTitle",
      "seo.ogDescription",
      "seo.ogImage",
      "seo.twitterTitle",
      "seo.twitterDescription",
      "seo.twitterImage",
    ],
  },
});

const seoData = {
  title: aboutPageData?.attributes?.seo?.title,
  titleDefault: "EM GUIDE",
  titleTemplate: "%s â€“ Music Magazine Network",
  description: aboutPageData?.attributes?.seo?.description,
  canonical: aboutPageData?.attributes?.seo?.canonical ?? "",
  openGraph: {
    basic: {
      title: aboutPageData?.attributes?.seo?.ogTitle ?? "EM GUIDE",
      type: "website",
      image: aboutPageData?.attributes?.seo?.ogImage?.data?.attributes?.url
        ? `${import.meta.env.PUBLIC_ASSET_URL}${aboutPageData?.attributes?.seo?.ogImage?.data?.attributes?.url}`
        : `${Astro.site}placeholder_og.png`,
      url: aboutPageData?.attributes?.seo?.canonical ?? "",
    },
    optional: {
      description:
        aboutPageData?.attributes?.seo?.ogDescription ??
        aboutPageData?.attributes?.seo?.description,
    },
    image: {
      secureUrl: aboutPageData?.attributes?.seo?.ogImage?.data?.attributes?.url
        ? `${import.meta.env.PUBLIC_ASSET_URL}${aboutPageData?.attributes?.seo?.ogImage?.data?.attributes?.url}`
        : `${Astro.site}placeholder_og.png`,
    },
  },
  twitter: {
    card: "summary_large_image",
    title:
      aboutPageData?.attributes?.seo?.twitterTitle ??
      aboutPageData?.attributes?.seo?.title,
    description:
      aboutPageData?.attributes?.seo?.twitterDescription ??
      aboutPageData?.attributes?.seo?.description,
    image: aboutPageData?.attributes?.seo?.twitterImage?.data
      ? `${import.meta.env.PUBLIC_ASSET_URL}${aboutPageData?.attributes?.seo?.twitterImage?.data?.attributes?.url}`
      : `${Astro.site}placeholder_tw.png`,
  },
};
---

<BaseLayout seoData={seoData}>
  {
    aboutPageData?.attributes?.content?.map((component) => {
      if (component.__component === "interactive.slider" && !component.hide) {
        return <Slider slides={component.slides} />;
      }
      if (
        component.__component === "static.featured-content" &&
        !component.hide
      ) {
        return (
          <section class="max-w-screen-lg px-4 mx-auto mb-20">
            <FeaturedContent
              title={component.title}
              description={component.description}
              image={component.image.data}
              button={component.button}
            />
          </section>
        );
      }
      if (component.__component === "static.wysiwyg" && !component.hide) {
        return (
          <section class="max-w-screen-lg px-4 mx-auto mb-20">
            <div
              class="[&>p]:text-xl [&>p]:mb-4 [&>h3]:mb-4 [&>h3]:font-display [&>h3]:font-bold [&>h3]:text-xl [&>blockquote]:px-2 [&>blockquote]:py-2.5 [&>blockquote]:bg-accent [&>blockquote]:font-display [&>blockquote]:text-2l [&>blockquote]:md:text-2xl [&>blockquote]:mb-4 em-editor-content"
              set:html={component.content}
            />
          </section>
        );
      }
      if (
        component.__component === "static.images-with-decoration" &&
        !component.hide
      ) {
        return (
          component.images.data?.length > 0 && (
            <section>
              <ImagesWithDecoration images={component.images.data} />
            </section>
          )
        );
      }
      if (
        component.__component === "static.text-with-side-image" &&
        !component.hide
      ) {
        return (
          <section class="max-w-screen-lg px-4 mx-auto mb-20">
            <TextWithSideImage
              text={component.text}
              image={component.image.data}
            />
          </section>
        );
      }
    })
  }
</BaseLayout>
